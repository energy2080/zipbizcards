var Alloy=require('/alloy'),
Backbone=Alloy.Backbone,
_=Alloy._;


function WPATH(s){var
index=s.lastIndexOf('/'),
path=-1===index?
'nl.fokkezb.drawer/'+s:
s.substring(0,index)+'/nl.fokkezb.drawer/'+s.substring(index+1);

return 0===path.indexOf('/')?path:'/'+path;
}

function __processArg(obj,key){
var arg=null;



return obj&&(arg=obj[key]||null),arg;
}

function Controller(){
































































































































































































































































































































function translateEvent(event){





















return'dk.napp.drawer'===mod?('draweropen'===event&&(event='windowDidOpen'),'drawerclose'===event&&(event='windowDidClose')):('windowDidOpen'===event&&(event='draweropen'),'windowDidClose'===event&&(event='drawerclose')),event;
}var Widget=new(require('/alloy/widget'))('nl.fokkezb.drawer');if(this.__widgetId='nl.fokkezb.drawer',require('/alloy/controllers/BaseController').apply(this,Array.prototype.slice.call(arguments)),this.__controllerPath='widget',this.args=arguments[0]||{},arguments[0])var __parentSymbol=__processArg(arguments[0],'__parentSymbol'),$model=__processArg(arguments[0],'$model'),__itemTemplate=__processArg(arguments[0],'__itemTemplate');var $=this,exports={},__defers={};exports.destroy=function(){},_.extend($,$.__views);var mod,args=arguments[0]||{};mod=1?'dk.napp.drawer':'com.tripvi.drawerlayout',$.module=require(mod),args.children&&_.each(args.children,function(child){if(child){var role=child.role;'dk.napp.drawer'!==mod&&(role=role.replace('Window','View')),role&&(args[role]=child)}});var consts;consts='dk.napp.drawer'===mod?['closeDrawerGestureMode','openDrawerGestureMode','centerHiddenInteractionMode','animationMode','statusBarStyle']:['drawerLockMode'],_.each(consts,function(arg){args[arg]&&'string'==typeof args[arg]&&(args[arg]=$.module[args[arg]])}),'dk.napp.drawer'===mod?(_.has(args,'drawerIndicatorEnabled')&&(args.hamburgerIcon=args.drawerIndicatorEnabled,delete args.drawerIndicatorEnabled),_.has(args,'drawerArrowIcon')&&(args.arrowAnimation=args.drawerArrowIcon,delete args.drawerArrowIcon),_.has(args,'drawerArrowIconColor')&&(args.hamburgerIconColor=args.drawerArrowIconColor,delete args.drawerArrowIconColor)):(_.has(args,'hamburgerIcon')&&(args.drawerIndicatorEnabled=args.hamburgerIcon,delete args.hamburgerIcon),_.has(args,'arrowAnimation')&&(args.drawerArrowIcon=args.arrowAnimation,delete args.arrowAnimation),_.has(args,'hamburgerIconColor')&&(args.drawerArrowIconColor=args.hamburgerIconColor,delete args.hamburgerIconColor)),delete args.id,delete args.__parentSymbol,delete args.children,'dk.napp.drawer'===mod?(_.extend(args,args.window||{}),$.instance=$.module.createDrawer(_.omit(args,'window')),$.window=$.instance,$.addTopLevelView($.instance)):($.instance=$.module.createDrawer(_.omit(args,'window')),$.window=Ti.UI.createWindow(_.extend(_.pick(args,['orientationModes','exitOnClose','backgroundColor','theme']),args.window||{})),$.window.add($.instance),$.addTopLevelView($.window)),!1;var props;props='dk.napp.drawer'===mod?['centerWindow','leftWindow','rightWindow','closeDrawerGestureMode','openDrawerGestureMode','leftDrawerWidth','rightDrawerWidth','orientationModes','centerHiddenInteractionMode','animationMode','animationVelocity','showShadow','shadowWidth','shouldStretchDrawer','fading','parallaxAmount','statusBarStyle','hamburgerIcon','hamburgerIconColor','arrowAnimation']:['leftView','rightView','centerView','isLeftDrawerOpen','isLeftDrawerVisible','isRightDrawerOpen','isRightDrawerVisible','leftDrawerWidth','rightDrawerWidth','drawerIndicatorEnabled','drawerIndicatorImage','drawerLockMode','drawerArrowIcon','drawerArrowIconColor'],_.each(props,function(key){var cc=key[0].toUpperCase()+key.substring(1),get=$['get'+cc]||($['get'+cc]=function(){return $.instance[key]}),set=$['set'+cc]||($['set'+cc]=function(val){-1!==consts.indexOf(key)&&'string'==typeof val&&(val=$.module[val]),$.instance[key]=val});Object.defineProperty($,key,{get:get,set:set})}),'dk.napp.drawer'===mod?($.closeLeftWindow=function(){if($.instance.isLeftWindowOpen())return $.instance.toggleLeftWindow()},$.closeRightWindow=function(){if($.instance.isRightWindowOpen())return $.instance.toggleRightWindow()},$.openLeftWindow=function(){if(!$.instance.isLeftWindowOpen())return $.instance.toggleLeftWindow()},$.openRightWindow=function(){if(!$.instance.isRightWindowOpen())return $.instance.toggleRightWindow()},$.replaceCenterView=function(view){return $.instance.setCenterView(view)},$.leftView=$.leftWindow,$.setLeftView=$.setLeftWindow,$.getLeftView=$.getLeftWindow,$.centerView=$.centerWindow,$.setCenterView=$.setCenterWindow,$.getCenterView=$.getCenterWindow,$.rightView=$.rightWindow,$.setRightView=$.setRightWindow,$.getRightView=$.getRightWindow,$.drawerIndicatorEnabled=$.hamburgerIcon,$.setDrawerIndicatorEnabled=$.setHamburgerIcon,$.getDrawerIndicatorEnabled=$.getHamburgerIcon,$.drawerArrowIcon=$.arrowAnimation,$.setDrawerArrowIcon=$.setArrowAnimation,$.getDrawerArrowIcon=$.getArrowAnimation,$.drawerArrowIconColor=$.hamburgerIconColor,$.setDrawerArrowIconColor=$.setHamburgerIconColor,$.getDrawerArrowIconColor=$.getHamburgerIconColor):($.open=function(params){return $.window.open(params)},$.close=function(params){return $.window.close(params)},$.isAnyWindowOpen=function(){return $.instance.getIsLeftDrawerOpen()||$.instance.getIsRightDrawerOpen()},$.isLeftWindowOpen=function(){return $.instance.getIsLeftDrawerOpen()},$.isRightWindowOpen=function(){return $.instance.getIsRightDrawerOpen()},$.leftWindow=$.leftView,$.setLeftWindow=$.setLeftView,$.getLeftWindow=$.getLeftView,$.centerWindow=$.centerView,$.setCenterWindow=$.setCenterView,$.getCenterWindow=$.getCenterView,$.rightWindow=$.rightView,$.setRightWindow=$.setRightView,$.getRightWindow=$.getRightView,$.hamburgerIcon=$.drawerIndicatorEnabled,$.setHamburgerIcon=$.setDrawerIndicatorEnabled,$.getHamburgerIcon=$.getDrawerIndicatorEnabled,$.arrowAnimation=$.drawerArrowIcon,$.setArrowAnimation=$.setDrawerArrowIcon,$.getArrowAnimation=$.getDrawerArrowIcon,$.hamburgerIconColor=$.drawerArrowIconColor,$.setHamburgerIconColor=$.setDrawerArrowIconColor,$.getHamburgerIconColor=$.getDrawerArrowIconColor),$.on=function(event,callback,context){return'dk.napp.drawer'!==mod&&('open'===event||'close'===event)?$.window.addEventListener(event,callback):$.instance.addEventListener(translateEvent(event),callback)},$.off=function(event,callback,context){return'dk.napp.drawer'!==mod&&('open'===event||'close'===event)?$.window.addEventListener(event,callback):$.instance.removeEventListener(translateEvent(event),callback)},$.trigger=function(event,args){return $.instance.fireEvent(translateEvent(event),args)},$.addEventListener=$.on,$.removeEventListener=$.off,$.fireEvent=$.trigger;var methods;methods='dk.napp.drawer'===mod?['toggleLeftWindow','toggleRightWindow','bounceLeftWindow','bounceRightWindow','isAnyWindowOpen','isLeftWindowOpen','isRightWindowOpen','open','close']:['replaceCenterView','toggleLeftWindow','openLeftWindow','closeLeftWindow','toggleRightWindow','openRightWindow','closeRightWindow'],_.each(methods,function(fn){$[fn]||($[fn]=0?function(a,b){return $.instance[fn](a,b)}:$.instance[fn])}),









_.extend($,exports);
}

module.exports=Controller;